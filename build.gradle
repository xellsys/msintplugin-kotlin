buildscript {
    ext {
        kotlinVersion = '1.2.20'
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")

        classpath 'gradle.plugin.de.db.vz:msintplugin:1.0.0'
    }
}
repositories.addAll(getBuildscript().getRepositories())

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'de.db.vz.msintplugin'

group = 'xellsys.msintplugin.sample'
version = '1.0'
sourceCompatibility = 1.8

//mainClassName = 'xellsys.msintplugin.sample.MyKotlinApplication'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR5'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    integrationTestCompile 'junit:junit:4.+'
    integrationTestCompile 'com.github.kittinunf.fuel:fuel:1.12.1'
}

task buildDocker {
    exec {
        commandLine 'mkdir', '-p', 'build/docker'
    }
    exec {
        commandLine 'cp', '-r', 'src/main/docker/', 'build/docker'
    }
    exec {
        commandLine 'cp', 'build/libs/msintplugin-kotlin-1.0.jar', 'build/docker/msintplugin-kotlin.jar'
    }
    exec {
        commandLine 'docker', 'build', 'build/docker/', '-t', 'kotlinhelloworld'
    }
}

build.dependsOn buildDocker
integrationTestUp.dependsOn build
